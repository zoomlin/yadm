" ██      ██
" █ ████████ ████     ████ ███████     ██████ */
" ██     ░██░░ ░██░░░░░ ░██░██   ██░██░██░░░░██   ██░░░░██
" ██     ░██ ██░██      ░██░░██ ██ ░██░██   ░██  ██    ░░
" ░██    ██ ░██░███████ ░██ ░░███  ░██░███████  ░██
" ░░██  ██  ░██░██░░░░  ░██  ░░█   ░██░██░░░██  ░██
"  ░░████   ░██░██      ░██   ░    ░██░██  ░░██ ░░██    ██
"   ░░██    ░██░██      ░██        ░██░██   ░░██ ░░██████
"    ░░     ░░ ░░       ░░         ░░ ░░     ░░   ░░░░░░

" vim: filetype=vifm :
" Sample configuration file for vifm (last updated: 24 Oct, 2014)
" You can edit this file by hand.
" The " character at the beginning of a line comments out the line.
" Blank lines are ignored.
" The basic format for each item is shown with an example.

" ------------------------------------------------------------------------------

" This is the actual command used to start vi.  The default is vim.
" If you would like to use another vi clone such as Elvis or Vile
" you will need to change this setting.

set vicmd="gvim -geometry 1920x1080"
" set viCMD=elvis\ -G\ termcap
" set vicmd=vile
 " Trash Directory
" The default is to move files that are deleted with dd or :d to
" the trash directory.  If you change this you will not be able to move
" files by deleting them and then using p to put the file in the new location.
" I recommend not changing this until you are familiar with vifm.
" This probably shouldn't be an option.
set trash
set syscalls
" This is how many directories to store in the directory history.

set history=100

" Automatically resolve symbolic links on l or Enter.

set followlinks

" With this option turned on you can run partially entered commands with
" unambiguous beginning using :! (e.g. :!Te instead of :!Terminal or :!Te<tab>).

set fastrun
set runexec
" Natural sort of (version) numbers within text.

set sortnumbers

" Maximum number of changes that can be undone.

set undolevels=100

" If you installed the vim.txt help file set vimhelp.
" If would rather use a plain text help file set novimhelp.

set novimhelp

" If you would like to run an executable file when you
" press return on the file name set this.

set norunexec

" Use KiB, MiB, ... instead of KB, MB, ...

set noiec
set tuioptions-=s
" set cpoptions-=t
" Selected color scheme

colorscheme matrix

" The FUSE_HOME directory will be used as a root dir for all FUSE mounts.
" Unless it exists with write/exec permissions set, vifm will attempt to
" create it.

set fusehome=/tmp/vifm_FUSE

" Format for displaying time in file list. For example:
" TIME_STAMP_FORMAT=%m/%d-%H:%M
" See man date or man strftime for details.

set timefmt=%m/%d\ %H:%M

" Show list of matches on tab completion in command-line mode

set wildmenu

" Ignore case in search patterns unless it contains at least one uppercase
" letter

set ignorecase
set smartcase

" Don't highlight search results automatically

set nohlsearch

" Use increment searching (search while typing)
set incsearch

" Try to leave some space from cursor to upper/lower border in lists

set scrolloff=4

" Don't do too many requests to slow file systems

set slowfs=curlftpfs

" Set custom status line look

set statusline="  %t%= %A %10u:%-7g %6E %20d  "

" ------------------------------------------------------------------------------

" :mark mark /full/directory/path [filename]

" ------------------------------------------------------------------------------

" :com[mand][!] command_name action
" The following macros can be used in a command
" %a is replaced with the user arguments.
" %c the current file under the cursor.
" %C the current file under the cursor in the other directory.
" %f the current selected file, or files.
" %F the current selected file, or files in the other directory.
" %b same as %f %F.
" %d the current directory name.
" %D the other window directory name.
" %m run the command in a menu window

command! df df -h %m 2> /dev/null
command! diff vim -d %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep vim "+grep %a"
command! reload :write | restart

" ------------------------------------------------------------------------------

" The file type is for the default programs to be used with
" a file extension.
" :filetype pattern1,pattern2 defaultprogram,program2
" :fileviewer pattern1,pattern2 consoleviewer
" The other programs for the file type can be accessed with the :file command
" The command macros %f, %F, %d, %F may be used in the commands.
" The %a macro is ignored.  To use a % you must put %%.

" For automated FUSE mounts, you must register an extension with :file[x]type
" in one of following formats:
"
" :filetype extensions FUSE_MOUNT|some_mount_command using %SOURCE_FILE and %DESTINATION_DIR variables
" %SOURCE_FILE and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.zip,*.jar,*.war,*.ear FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR
"
" :filetype extensions FUSE_MOUNT2|some_mount_command using %PARAM and %DESTINATION_DIR variables
" %PARAM and %DESTINATION_DIR are filled in by vifm at runtime.
" A sample line might look like this:
" :filetype *.ssh FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR
" %PARAM value is filled from the first line of file (whole line).
" Example first line for SshMount filetype: root@127.0.0.1:/
"
" You can also add %CLEAR if you want to clear screen before running FUSE
" program.

" Pdf
filextype *.pdf zathura %c %i &, apvlv %c, xpdf %c
fileviewer *.pdf pdftotext -nopgbrk %c -

"Fb2
filextype *.fb2 simple-fb2-reader -b %c

" PostScript
filextype *.ps,*.eps,*.ps.gz
        \ {View in zathura}
        \ zathura %f,
        \ {View in gv}
        \ gv %c %i &,

" Djvu
filextype *.djvu
        \ {View in zathura}
        \ zathura %f,
        \ {View in apvlv}
        \ apvlv %f,

" Audio
filetype *.wav,*.mp3,*.flac,*.ogg,*.m4a,*.wma,*.ape,*.ac3
       \ {Play using mpv}
       \ mpv %c,
       \ {Mediainfo}
        \ mediainfo %c,
       \ mplayer %f,
       \ ffplay %c,
fileviewer *.mp3 mp3info
fileviewer *.flac soxi

" Video
filextype *.avi,*.m2ts,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.vob,*.flv,*.m2v,*.mov,*.webm,*.ts,*.m4v
        \ {View using mpv}
        \ smplayer %c,
        \ mpv -fs %c,
        \ {Mediainfo}
         \ mediainfo %c,
        \ {View using mpv on TV}
        \ DISPLAY=":0.1" mpv -fs %c,

" Web
filextype *.html,*.htm
        \ {Open with dwb}
        \ dwb %f %i &,
        \ {Open with firefox}
        \ firefox %f &,
        \ {Open with uzbl}
        \ uzbl-browser %f %i &,
filetype *.html,*.htm links, lynx

" Object
filetype *.o nm %f | less

" Man page
filetype *.[1-8] gtbl %c | groff -Tascii -man | less
fileviewer *.[1-8] gtbl %c | groff -Tascii -man | col -b

fileviewer *.tif,*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm
         \ imgt %px %py %pw %ph %c
" Image
filextype *.tif,*.bmp,*.jpg,*.JPG,*.jpeg,*.png,*.gif,*.xpm
        \ {View in pqiv}
        \ pqiv --browse -fin 2>/dev/null,
        \ feh -x --auto-rotate -FZ %d --start-at %d/%c 2>/dev/null
        \ vimiv -f,
        \ mirage,
        \ geeqie -f 2>/dev/null,
        \ {View in sxiv on TV}
        \ DISPLAY=":0.1" geeqie %c,
        \ {View in shotwell}
        \ shotwell,
fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm convert -identify %f -verbose /dev/null
\ imgt %px %py %pw %ph %c
" MD5
filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f,

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c,

" Torrent
filetype *.torrent tixati %f &
fileviewer *.torrent dumptorrent -v %c

" FuseZipMount
filetype *.zip,*.jar,*.war,*.ear,*.oxt
       \ {Mount with fuse-zip}
       \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       \ {View contents}
       \ zip -sf %c | less,
       \ {Extract here}
       \ dtrx %c,
fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
filetype *.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz
       \ {Mount with archivemount}
       \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.tgz,*.tar.gz tar -tzf %c
fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
fileviewer *.tar.txz,*.txz xz --list %c

" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c

" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR,

" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c

" Office files
filextype *.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx libreoffice %f &
fileviewer *.doc catdoc %c
fileviewer *.docx, docx2txt.pl %f -

" TuDu files
filetype *.tudu tudu -f %c

" Qt projects
filextype *.pro qtcreator %f &

" Directories
filextype */
        \ {View in mpv}
        \ mpv %f 2> /dev/null &

" Directories
filextype */
        \ {view in geeqie}
        \ geeqie -f -t %f  &
fileviewer .*/,*/ tree %f

" Syntax highlighting in preview
"
" Explicitly set highlight type for some extensions
"
" 256-color terminal
" fileviewer *.[ch],*.[ch]pp highlight -O xterm256 -s dante --syntax c %c
" fileviewer Makefile,Makefile.* highlight -O xterm256 -s dante --syntax make %c
"
" 16-color terminal
" fileviewer *.c,*.h highlight -O ansi -s dante %c
"
" Or leave it for automatic detection
"
" fileviewer * pygmentize -O style=monokai -f console256 -g

" Displaying pictures in terminal
"
" fileviewer *.jpg,*.png shellpic %c

" Open all other files with default system programs (you can also remove all
" :file[x]type commands above to ensure they don't interfere with system-wide
" settings).  By default all unknown files are opened with 'vi[x]cmd'
" uncommenting one of lines below will result in ignoring 'vi[x]cmd' option
" for unknown file types.
" For *nix:
" filetype * xdg-open
" For OS X:
" filetype * open
" For Windows:
" filetype * start, explorer

" ------------------------------------------------------------------------------

" What should be saved automatically between vifm runs
" Like in previous versions of vifm
" set vifminfo=options,filetypes,commands,bookmarks,dhistory,state,cs
" Like in vi
set vifminfo=dhistory,savedirs,chistory,state,tui,shistory,
    \phistory,fhistory,dirstack,registers,bookmarks

" ------------------------------------------------------------------------------

" Examples of configuring both panels

" Customize view columns a bit (enable ellipsis for truncated file names)
"
" windo set viewcolumns=-{name}..,6{}.

" Filter-out build and temporary files
"
" windo filter! /^.*\.(lo|o|d|class|py[co])$|.*~$/

" ------------------------------------------------------------------------------

" Sample mappings

" Start shell in current directory
nnoremap s :sort<cr>
nnoremap o :f<cr>

" Display sorting dialog
nnoremap S :sort<cr>

" Toggle visibility of preview window
nnoremap w :view<cr>
vnoremap w :view<cr>gv

" Open file in existing instance of gvim
nnoremap r :!gvim --remote-tab-silent %f<cr>
" Open file in new instance of gvim
nnoremap R :!gvim %f<cr>

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Yank current directory path into the clipboard
nnoremap yd :!echo %d | xclip %i<cr>
nnoremap ya :!echo mp "%c" | xclip %i<cr>
nnoremap yn :!echo -n %c | xclip %i<cr>

" Yank current file path into the clipboard
nnoremap yf :!echo -n %c:p | xclip %i<cr>
nnoremap yr :!echo -n %c:p | sed 's/^.//' | xclip %i<cr>

" Mappings for faster renaming
nnoremap I cw<c-a>
"nnoremap cc cw<c-u>
nnoremap cc cw
nnoremap bb G
nnoremap A cw<c-w>

" Open console in current directory
nnoremap ,t :!xterm &<cr>

" Open vim to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | execute ':!vim $MYVIFMRC' | restart<cr>
" Open gvim to edit vifmrc
nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Example of standard two-panel file managers mappings
nnoremap <f3> :!less %f<cr>
nnoremap <f4> :!gvim %f<cr>
nnoremap <s-f4> :touch<space>
nnoremap <c-p> :marks<cr>
nnoremap R :rename<cr>
vnoremap R :rename<cr>
nnoremap <c-l> :locate<space>
nnoremap L :ln -s %d/%f %D<cr><down>
nnoremap h :hist<cr>
nnoremap Q :!deadbeef --queue %f&> /dev/null &<cr>
nnoremap c-s :!ushare -D -c %f<cr>
nnoremap H :hist<cr>
nnoremap M :marks<cr>
nnoremap gh :cd /home/den<cr>
nnoremap ge :cd /etc<cr>
nnoremap gu :cd /usr/bin<cr>
nnoremap gc :cd /home/den/.config<cr>
nnoremap gt :cd /home/den/.config/termite<cr>
nnoremap gp :cd /home/den/.password-store/<cr>
nnoremap gz :cd /home/den/.zsh<cr>
nnoremap gd :cd /home/den/Desktop<cr>
nnoremap gf :cd /mnt/Now/Downloads<cr>
nnoremap gn :cd /media/NAS3/@Now<cr>
nnoremap gy :cd /home/den/.cache/yay<cr>
nnoremap gr :cd /<cr>
nnoremap gk :cd /mnt/512/2watch<cr>
nnoremap gi :cd /mnt/512/Image<cr>
nnoremap gs :cd /mnt/Now/Soft<cr>
nnoremap g0 :cd /home/den/01<cr>
nnoremap gv :cd /home/den/01/2.Video<cr>
nnoremap gvv :cd /home/den/.vim<cr>
nnoremap ga :cd /mnt/Now/2listen<cr>
nnoremap gb :cd /home/den/bin<cr>
nnoremap gm :cd /mnt<cr>
nnoremap o :sync %c<cr>
nnoremap <f5> :copy!<cr>
nnoremap <s-f5> :copy!<cr>
vnoremap <f5> :copy!<cr>
nnoremap <f6> :move!<cr>
nnoremap . :move!<cr>
vnoremap . :move!<cr>
vnoremap <f6> :move!<cr>
nnoremap <f7> :mkdir<space>
nnoremap <f8> :delete<cr>
nnoremap <s-delete> :delete<cr>
vnoremap <s-delete> :delete<cr>
vnoremap <f8> :delete<cr>
nnoremap _ :!sudo rm -fr %f<cr>
vnoremap _ :!sudo rm -fr %f<cr>
nmap ; :marks<cr>
nmap ' :copy!<cr>
nmap <delete> :move!<cr>
vmap <delete> :move!<cr>
nnoremap ` '
nnoremap ; /
nnoremap <esc> ZZ
nnoremap 0 :shell<cr>
nnoremap * vG
nnoremap <space> gAtj
nnoremap <C-a> cp
nnoremap ? :cd %D<cr>
nnoremap <m-c-e> :dt<cr>
vnoremap <m-c-e> :dt<cr>
nnoremap <m-c-s> :du<cr>
vnoremap <m-c-s> :du<cr>
nnoremap <m-c-a> :ar<cr>
vnoremap <m-c-a> :ar<cr>
nmap EE :!atool -x %f<cr>
nmap <c-x> :!dtrx -n %f<cr>
nmap <c-g> :!gpg -c %f<cr>
nmap <c-s> :!!rg<space>
nmap <c-u> :!mpc add "%f"<cr>
nmap <c-f> :!fzf -e --bind "enter:execute(xdg-open {})"<cr>
"nmap <c-b> :!ls -d $PWD/*.flac >> /home/den/.mpd/playlists/best.m3u<cr>
nmap <c-b> :!find%u<cr>
nmap <c-e> :!! ./%f<cr>
nmap ZZ :!zip -r %f.zip %f<cr>
nmap YY :!rclone copy %f Yandex:Загрузки<cr>
nmap RR :!duply den fetch "%f" /home/den/"%f" --force<cr>
nmap AA :!7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on "%f.7z" %f<cr>
vmap AA :!7z a -t7z -m0=lzma -mx=9 -mfb=64 -md=32m -ms=on "%f.7z" %f<cr>
nmap yp :clone<cr>

" trash-cli to handle trash
" nmap <delete> :!trash-put %f<cr>
" nmap u :!trash-restore <cr>
nmap I :!!mediainfo %c <cr>
nmap U :!!rclone copy %c drive:Audio <cr>
nmap B :!!rclone copy %c drive:Linux <cr>
" nmap DD :!trash-empty <cr>
nmap DD :empty <cr>

" copy files to the opposite pane
nmap yy :!cp %f %D<cr>

" move files to the opposite pane
nmap dd :!mv %f %D<cr>
" open gvim to edit .vifmrc
nnoremap ,c :!gvim --remote-tab-silent $MYVIFMRC &<cr>
nnoremap / <c-i>
" ------------------------------------------------------------------------------

" Various customization examples

" Use ag (the silver searcher) instead of grep
"
 set grepprg=ag\ --line-numbers\ %i\ %a\ %s

" Add additional place to look for executables
"
" let $PATH=$HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>
filetype *.zip,*.jar,*.war,*.ear
\ {Mount with fuse-zip}
\ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
\ {View contents}
\ zip -sf %c | less,
\ {Extract here}
\ dtrx %c,
filetype *.pdf zathura %f 2>/dev/null &
filetype=djvu *.djvu zathura %f 2>/dev/null &
" yank current directory path into the clipboard
nnoremap yd :!echo -n %d | xclip %i<cr>
" Fuse7z and 7z archives
filetype *.7z
       \ {Mount with fuse-7z}
       \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.7z 7z l %c
" IsoMount
filetype *.iso
       \ {Mount with fuseiso}
       \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,
" Rar2FsMount and rar archives
filetype *.rar
       \ {Mount with rar2fs}
       \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
fileviewer *.rar unrar v %c
" SshMount
filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR,

" FtpMount
filetype *.ftp
       \ {Mount with curlftpfs}
       \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR,
command! ar tar cvfj %f.tar.bz2 %f
command! df df -h %m 2> /dev/null
command! mm mpv %f
command! mm smplayer %f
command! pq pqiv %f
command! as audacious %f
command! dt dtrx %f
command! fh feh %f

command! mp makepkg -Acs --skipchecksums
command! pi sudo yay -U %c
command! mo mimeopen -d %c
command! du du -hs %f%m
command ln ln -s %d/%f %D
command rm !rm -fr %f
command! run !! ./%f
command! zip zip -r %f.zip %f

"set runexec*/
